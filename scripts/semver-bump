#!/usr/bin/env python3
import os
import re
import sys
import subprocess


def bump_version(version, bump_type):
    major, minor, patch = map(int, version.split("."))

    if bump_type == "major":
        raise Exception("Major bump not supported -- do this by hand")
    elif bump_type == "minor":
        minor += 1
        patch = 0
    elif bump_type == "patch":
        patch += 1
    else:
        raise Exception(f"Unknown bump type: {bump_type}")

    return f"{major}.{minor}.{patch}"


def update_version_in_file(file_path, old_version, new_version):
    with open(file_path, "r") as file:
        content = file.read()

    content = content.replace(
        f'version = "{old_version}"', f'version = "{new_version}"'
    )

    with open(file_path, "w") as file:
        file.write(content)


def main(bump_type, packages):

    for package_dir in packages:
        pyproject_path = os.path.join(package_dir, "pyproject.toml")

        with open(pyproject_path, "r") as file:
            content = file.read()

        version_match = re.search(r'version = "(.*?)"', content)
        if version_match:
            old_version = version_match.group(1)
            new_version = bump_version(old_version, bump_type)
            update_version_in_file(pyproject_path, old_version, new_version)
            print(f"Bumped {package_dir} from {old_version} to {new_version}")

    subprocess.run(["uv", "sync"])


if __name__ == "__main__":
    bump_type = sys.argv[1]
    packages = sys.argv[2:]

    if not packages:
        print("Specify packages or --all")
        sys.exit(1)

    if packages == ["--all"]:
        packages = [
            package
            for package in os.listdir(".")
            if os.path.isdir(package) and package.startswith("plain")
        ]

    main(bump_type, packages)
